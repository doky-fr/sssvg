/**
 * Convert a JSON representation  of a path (as generated by svg-path-parser) to a string.
 * The path data must use absolute coordinates
 */
function pathToString(d) {
    return d.map((command) => {
        if (command.command === 'moveto') {
            return `M ${command.x} ${command.y}`;
        } else if (command.command === 'lineto') {
            return `L ${command.x} ${command.y}`;
        } else if (command.command === 'horizontal lineto') {
            return `H ${command.x}`;
        } else if (command.command === 'vertical lineto') {
            return `V ${command.y}`;
        } else if (command.command === 'curveto') {
            return `C ${command.x1} ${command.y1} ${command.x2} ${command.y2} ${command.x} ${command.y}`;
        } else if (command.command === 'smooth curveto') {
            return `S ${command.x2} ${command.y2} ${command.x} ${command.y}`;
        } else if (command.command === 'quadratic curveto') {
            return `Q ${command.x1} ${command.y1} ${command.x} ${command.y}`;
        } else if (command.command === 'smooth quadratic curveto') {
            return `T ${command.x} ${command.y}`;
        } else if (command.command === 'elliptical arc') {
            return `A ${command.rx} ${command.ry} ${command.xAxisRotation} ${command.largeArc ? 1 : 0} ${command.sweep ? 1 : 0} ${command.x} ${command.y}`;
        } else if (command.command === 'closepath') {
            return 'Z';
        }
        return '';
    }).join(' ');
}

function parseViewBox(viewBoxStr) {
    if (!viewBoxStr || viewBoxStr.length === 0) {
        return undefined;
    }

    // Remove commas and plus signs, normalize and trim whitespace
    viewBoxStr = viewBoxStr.replace(/[,+]|px/g, ' ').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');

    const parts = viewBoxStr.split(' ');
    if (parts.length !== 4) {
        return undefined;
    }

    return {
        x: parseFloat(parts[0]),
        y: parseFloat(parts[1]),
        width: parseFloat(parts[2]),
        height: parseFloat(parts[3])
    };
}

module.exports = {
    parseViewBox,
    pathToString
};
